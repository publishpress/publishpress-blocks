{"version":3,"file":"preset-manager.js","mappings":"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","sources":["webpack://advanced-gutenberg/./node_modules/hour-convert/index.js","webpack://advanced-gutenberg/webpack/bootstrap","webpack://advanced-gutenberg/webpack/runtime/compat get default export","webpack://advanced-gutenberg/webpack/runtime/define property getters","webpack://advanced-gutenberg/webpack/runtime/hasOwnProperty shorthand","webpack://advanced-gutenberg/./assets/blocks/0-adv-components/datetime.jsx","webpack://advanced-gutenberg/./assets/blocks/0-adv-components/utils.jsx","webpack://advanced-gutenberg/./assets/blocks/block-controls/preset-manager.jsx"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n\n    /**\n     * Convert 24-hour time to 12-hour format.\n     *\n     * @param {number} hour Hour to convert (0-23)\n     * @return {object} { hour, meridiem } (meridian is also returned for backwards compatibility)\n     */\n    to12Hour: function to12Hour(hour) {\n        var meridiem = hour < 12 ? 'am' : 'pm';\n        return {\n            hour: ((hour + 11) % 12 + 1),\n            meridiem: meridiem,\n            meridian: meridiem\n        };\n    },\n\n    /**\n     * Convert 12-hour time to 24-hour format.\n     *\n     * @param {object} time Time object\n     * @param {number} time.hour Hour to convert (1-12)\n     * @param {string} time.meridiem Hour meridiem (am/pm). 'time.meridian' is\n     *  supported for backwards compatibility.\n     * @return {number}\n     */\n    to24Hour: function to24Hour(time) {\n        var meridiem = time.meridiem || time.meridian;\n        return (meridiem === 'am' ? 0 : 12) + (time.hour % 12);\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import hourConvert from 'hour-convert';\r\n\r\nconst { ButtonGroup, Button, DateTimePicker, TextControl, CheckboxControl, Popover, Tooltip, SelectControl, Icon } = wp.components;\r\nconst { Component, Fragment, useState } = wp.element;\r\nconst { __, _x } = wp.i18n;\r\nconst { applyFilters } = wp.hooks;\r\n\r\nexport function AdvDateTimeControl(props) {\r\n    const [popupState, setPopupState] = useState( false );\r\n    const togglePopup = () => {\r\n        setPopupState( ! popupState );\r\n    };\r\n\r\n    const {\r\n        buttonLabel,\r\n        dateLabel,\r\n        date,\r\n        onChangeDate,\r\n        onDateClear,\r\n        onInvalidDate,\r\n        placement,\r\n        offset\r\n    } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"advgb-advcalendar-control\">\r\n                <label>\r\n                    { dateLabel }\r\n                </label>\r\n                <div>\r\n                    <Button\r\n                        isLink\r\n                        icon=\"calendar\"\r\n                        onClick={ togglePopup }\r\n                    >\r\n                        <Tooltip text={ __( 'Change date', 'advanced-gutenberg' ) }>\r\n                            <span>\r\n                                { date ? moment( date ).format( \"MMMM DD YYYY, h:mm a\" ) : buttonLabel }\r\n                            </span>\r\n                        </Tooltip>\r\n                    </Button>\r\n                    { date &&\r\n        \t\t\t\t<Button\r\n        \t\t\t\t\ticon=\"no-alt\"\r\n                            className=\"advgb-advcalendar-remove-icon\"\r\n        \t\t\t\t\tonClick={ () => onDateClear() }\r\n        \t\t\t\t/>\r\n        \t\t\t}\r\n                </div>\r\n            </div>\r\n            { popupState &&\r\n                <Popover\r\n                    className=\"advgb-advcalendar-popover\"\r\n                    onClose={ setPopupState.bind( null, false ) }\r\n                    resize={ false }\r\n                    placement={ placement }\r\n                    offset={ offset }\r\n                >\r\n                    <label className=\"advgb-advcalendar-popover-label\">\r\n                        { dateLabel }\r\n                        <Button\r\n        \t\t\t\t\ticon=\"no-alt\"\r\n                            className=\"advgb-advcalendar-remove-icon\"\r\n        \t\t\t\t\tonClick={ togglePopup }\r\n        \t\t\t\t/>\r\n                    </label>\r\n                    <DateTimePicker\r\n                        currentDate={ date }\r\n                        onChange={ onChangeDate }\r\n                        is12Hour={ true }\r\n                        isInvalidDate={ onInvalidDate }\r\n                    />\r\n                </Popover>\r\n            }\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nAdvDateTimeControl.defaultProps = {\r\n    placement: 'left',\r\n    offset: 40\r\n}\r\n\r\nexport function AdvDaysControl(props) {\r\n    const allDays = [\r\n        { slug: 0, label: _x( 'S', 'Sunday first letter', 'advanced-gutenberg' ) },\r\n        { slug: 1, label: __( 'M', 'advanced-gutenberg' ) },\r\n        { slug: 2, label: _x( 'T', 'Tuesday first letter', 'advanced-gutenberg' ) },\r\n        { slug: 3, label: __( 'W', 'advanced-gutenberg' ) },\r\n        { slug: 4, label: _x( 'T', 'Thursday first letter', 'advanced-gutenberg' ) },\r\n        { slug: 5, label: __( 'F', 'advanced-gutenberg' ) },\r\n        { slug: 6, label: _x( 'S', 'Saturday first letter', 'advanced-gutenberg' ) }\r\n    ];\r\n\r\n    const {\r\n        label,\r\n        days = [],\r\n        onChangeDays\r\n    } = props;\r\n\r\n    // Use a single state variable to store the selected days\r\n    const [selectedDays, setSelectedDays] = useState(Array.isArray(days) ? days : []);\r\n\r\n    /**\r\n    * Check if the day is selected or not\r\n    *\r\n    * @since 3.1.2\r\n    *\r\n    * @param {string} Day slug e.g. 'u' for Sunday, 't' for Tuesday\r\n    *\r\n    * @return {bool}\r\n    */\r\n    function isDaySelected( slug ) {\r\n        return selectedDays.some( el => el === slug );\r\n    }\r\n\r\n    /**\r\n    * Update the selected days state when a checkbox is changed\r\n    *\r\n    * @since 3.1.2\r\n    *\r\n    * @param {string} Day slug e.g. 'u' for Sunday, 't' for Tuesday\r\n    *\r\n    * @return {void}\r\n    */\r\n    function onChangeDay( slug ) {\r\n\r\n        // Check if the day is already selected\r\n        const isSelected = isDaySelected( slug );\r\n\r\n        // Create a new array with the updated selection\r\n        let updatedDays;\r\n        if ( isSelected ) {\r\n            // Remove the day from the selected days\r\n            updatedDays = selectedDays.filter( el => el !== slug );\r\n        } else {\r\n            // Add the day to the selected days\r\n            const findDay = allDays.find( el => el.slug === slug );\r\n            updatedDays = [ ...selectedDays, findDay.slug ];\r\n        }\r\n\r\n        // Remove duplicates\r\n        const uniqueDays = [ ...new Set( updatedDays ) ];\r\n\r\n        // Update the selected days state\r\n        setSelectedDays( uniqueDays );\r\n\r\n        // Call the onChangeDays prop to notify the parent component of the change\r\n        if ( onChangeDays ) {\r\n            onChangeDays( updatedDays );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"advgb-checkbox-wrapper\">\r\n                <label>\r\n                    { label }\r\n                </label>\r\n                <div className=\"advgb-checkbox-inline\">\r\n                    { allDays.map( day => (\r\n                        <CheckboxControl\r\n                            label={ day.label }\r\n                            checked={ isDaySelected( day.slug ) }\r\n                            onChange={ () => onChangeDay( day.slug ) }\r\n                        />\r\n                    ) ) }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nclass AdvTimeClass extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onChangeTime: null,\r\n            currentTime: this.props.currentTime || null,\r\n            hours: null,\r\n            minutes: null,\r\n            meridian: 'am',\r\n            onInit: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { onChangeTime, currentTime, onInit } = this.state;\r\n\r\n        if( this.props.onChangeTime !== onChangeTime ) {\r\n            this.setState( {\r\n                onChangeTime: this.props.onChangeTime,\r\n            } );\r\n        }\r\n\r\n        if( this.props.currentTime !== currentTime ) {\r\n            this.setState( {\r\n                currentTime: this.props.currentTime,\r\n            } );\r\n        }\r\n\r\n        // Init\r\n        if( currentTime && currentTime.includes(':') && onInit ) {\r\n            this.setState( {\r\n                hours:      currentTime.split(':')[0],\r\n                minutes:    currentTime.split(':')[1],\r\n                meridian:   parseInt( currentTime.split(':')[0] ) > 11 ? 'pm' : 'am', // We set > 11 because PM starts from 12:00:00\r\n                onInit:     false\r\n            } );\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { onChangeTime, currentTime } = this.props;\r\n        const { hours, minutes, meridian } = this.state;\r\n        const { hours: prevHours, minutes: prevMinutes, meridian: prevMeridian } = prevState;\r\n\r\n        if( hours !== prevHours || minutes !== prevMinutes || meridian !== prevMeridian ) {\r\n\r\n            // When clearing time\r\n            if( ! hours && ! minutes ) {\r\n                return;\r\n            }\r\n\r\n            // Default minutes when hours selected\r\n            if( hours && ! minutes ) {\r\n                this.setState( {\r\n                    minutes: '00'\r\n                } );\r\n            }\r\n\r\n            // Default hours when minutes selected\r\n            if( minutes && ! hours ) {\r\n                this.setState( {\r\n                    hours: '01'\r\n                } );\r\n            }\r\n\r\n            /* Convert 12-hours to 24-hours.\r\n             * e.g. 12:00 AM becomes 00:00:00\r\n             *      12:00 PM becomes 12:00:00\r\n             *      01:00 PM becomes 13:00:00\r\n             */\r\n            const savedTime   = `${this.appendZero(\r\n                                    hourConvert.to24Hour( {\r\n                                        hour: parseInt( hours ),\r\n                                        meridiem: meridian\r\n                                    } )\r\n                                )}:${minutes}:00`;\r\n\r\n            // Value saved in source/attribute\r\n            this.props.onChangeTime( savedTime );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Append zero to one digit numbers. e.g. 9 becomes '09'\r\n     *\r\n     * @since 3.1.2\r\n     *\r\n     * @param {string value Hours or minutes\r\n     *\r\n     * @return {string}\r\n     */\r\n    appendZero( value ) {\r\n        if( isNaN( value ) ) {\r\n            return;\r\n        }\r\n\r\n        const res = parseInt( value );\r\n\r\n        return res > 9 ? res : `0${res}`;\r\n    }\r\n\r\n    render() {\r\n        const { onChangeTime, currentTime, hours, minutes, meridian } = this.state;\r\n\r\n        // Make sure hours are valid. 01: min, 12: max\r\n        const handleChangeHours = event => {\r\n            const value = Math.max( 1, Math.min( 12, Number( event.target.value ) ) );\r\n            this.setState( {\r\n                hours: this.appendZero( value )\r\n            } );\r\n        };\r\n\r\n        // Allow to use up/down keys for hours\r\n        const handleKeyDownHours = event => {\r\n            const value = Number( event.target.value );\r\n            if( event.key === 'ArrowUp' && value < 12 ) {\r\n                this.setState( {\r\n                    hours: this.appendZero( value + 1 )\r\n                } );\r\n            } else if ( event.key === 'ArrowDown' && value > 1 ) {\r\n                this.setState( {\r\n                    hours: this.appendZero( value - 1 )\r\n                } );\r\n            }\r\n        };\r\n\r\n        // Make sure minutes are valid. 01: min, 59: max\r\n        const handleChangeMinutes = event => {\r\n            const value = Math.max( 0, Math.min( 59, Number( event.target.value ) ) );\r\n            this.setState( {\r\n                minutes: this.appendZero( value )\r\n            } );\r\n        };\r\n\r\n        // Allow to use up/down keys for minutes\r\n        const handleKeyDownMinutes = event => {\r\n            const value = Number( event.target.value );\r\n            if( event.key === 'ArrowUp' && value < 59 ) {\r\n                this.setState( {\r\n                    minutes: this.appendZero( value + 1 )\r\n                } );\r\n            } else if ( event.key === 'ArrowDown' && value > 0 ) {\r\n                this.setState( {\r\n                    minutes: this.appendZero( value - 1 )\r\n                } );\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"advgb-advtime-control\">\r\n                    <label>\r\n                        { this.props.label }\r\n                    </label>\r\n                    <div className=\"advgb-advtime-hours-minutes\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={\r\n                                hours\r\n                                    ? this.appendZero(\r\n                                        hourConvert.to12Hour( parseInt( hours ) ).hour\r\n                                    ) : ''\r\n                            }\r\n                            onChange={ handleChangeHours }\r\n                            onKeyDown={ handleKeyDownHours }\r\n                            placeholder=\"--\"\r\n                        />\r\n                        <span>:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={\r\n                                minutes ? minutes : ''\r\n                            }\r\n                            onChange={ handleChangeMinutes }\r\n                            onKeyDown={ handleKeyDownMinutes }\r\n                            placeholder=\"--\"\r\n                        />\r\n                    </div>\r\n                    <ButtonGroup className=\"advgb-advtime-meridian\">\r\n                        <Button\r\n                            variant={\r\n                                meridian === null || meridian === 'am' ? 'primary' : 'secondary'\r\n                            }\r\n                            onClick={ () => {\r\n                                this.setState( {\r\n                                    meridian: 'am'\r\n                                } );\r\n                            } }\r\n                            disabled={ hours && minutes ? false : true }\r\n                        >\r\n                            { __( 'AM', 'advanced-gutenberg' ) }\r\n                        </Button>\r\n                        <Button\r\n                            variant={\r\n                                meridian === 'pm' ? 'primary' : 'secondary'\r\n                            }\r\n                            onClick={ () => {\r\n                                this.setState( {\r\n                                    meridian: 'pm'\r\n                                } );\r\n                            } }\r\n                            disabled={ hours && minutes ? false : true }\r\n                        >\r\n                            { __( 'PM', 'advanced-gutenberg' ) }\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    { hours && minutes &&\r\n        \t\t\t\t<Button\r\n                            className=\"advgb-advtime-remove-icon\"\r\n        \t\t\t\t\ticon=\"no-alt\"\r\n                            onClick={\r\n                                () => {\r\n                                    this.props.onTimeClear();\r\n                                    this.setState( {\r\n                                        hours: null,\r\n                                        minutes: null,\r\n                                        meridian: 'am'\r\n                                    } );\r\n                                }\r\n                            }\r\n        \t\t\t\t/>\r\n        \t\t\t}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default AdvTimeClass;\r\n\r\nexport function AdvTimeControl(props) {\r\n    const { label, currentTime, onChangeTime, onTimeClear } = props;\r\n\r\n    return(\r\n        <AdvTimeClass\r\n            label={ label }\r\n            currentTime={ currentTime }\r\n            onChangeTime={ onChangeTime }\r\n            onTimeClear={ onTimeClear }\r\n        />\r\n    );\r\n}\r\n\r\nexport function AdvTimezoneControl(props) {\r\n    const { label, defaultTimezone } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            { applyFilters( 'advgb.timezoneControl',\r\n                <Fragment>\r\n                    <div className=\"advgb-promo-overlay-area\">\r\n                        <div className=\"advgb-blur\">\r\n                            { label }\r\n                            <SelectControl\r\n                                value={ defaultTimezone }\r\n                                options={ [ {\r\n                                        label: defaultTimezone,\r\n                                        value: defaultTimezone\r\n                                    }\r\n                                ] }\r\n                                disabled={ true }\r\n                            />\r\n                        </div>\r\n                        <div class=\"advgb-pro-overlay-wrap\">\r\n                            <div class=\"advgb-pro-small-overlay-text advgb-tooltips ppb-tooltips-library click\" data-toggle=\"ppbtooltip\" data-placement=\"top\">\r\n                                <span class=\"advgb-promo-text\">\r\n                                    <span class=\"dashicons dashicons-lock\" style={{ color: 'initial' }}></span> {__('Pro feature', 'advanced-gutenberg')}\r\n                                </span>\r\n                                <span class=\"tooltip-text\">\r\n                                    <p>\r\n                                        {__('PublishPress Blocks Pro supports Timezone configuration.', 'advanced-gutenberg')}\r\n                                    </p>\r\n                                    <p>\r\n                                        <a class=\"clickable\" href=\"https://publishpress.com/links/blocks\" target=\"_blank\">\r\n                                            { __( 'Upgrade to Pro', 'advanced-gutenberg' ) }\r\n                                        </a>\r\n                                    </p>\r\n                                    <i></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <></>\r\n                </Fragment>,\r\n                props\r\n            ) }\r\n        </Fragment>\r\n    )\r\n}\r\n","/**\r\n * Generate option title suggestions\r\n *\r\n * @since 3.1.1\r\n * @param options Available options as objects with slug and title. e.g. [{slug: 'subscriber', title: 'Subscriber'}, {slug: 'new_customer', title: 'New Customer'}]\r\n *\r\n * @return {array}  Option slugs. e.g. ['subscriber','new_customer']\r\n */\r\nexport const getOptionSuggestions = function( options ) {\r\n    return options.map( ( item ) => item.title );\r\n}\r\n\r\n/**\r\n * Match option slugs with its option titles\r\n * to display as field value (but NOT saved!).\r\n *\r\n * @since 3.1.1\r\n * @param slugs     Option slugs. e.g. ['subscriber','new_customer'] or [82, 92]\r\n * @param options   Available options as objects with slug and title. e.g. [{slug: 'subscriber', title: 'Subscriber'}, {slug: 'new_customer', title: 'New Customer'}]\r\n *\r\n * @return {array}  Option titles. e.g. ['Subscriber','New Customer']\r\n */\r\nexport const getOptionTitles = function( slugs, options ) {\r\n    let field_value = [];\r\n\r\n    if ( options !== null ) {\r\n        field_value = slugs.map( ( option_slug ) => {\r\n            let find_option = options.find( ( item ) => {\r\n                return item.slug === option_slug;\r\n            } );\r\n            if ( find_option === undefined || ! find_option ) {\r\n                return option_slug; // It should return false but creates empty selections\r\n            }\r\n            return find_option.title;\r\n        } );\r\n    }\r\n\r\n    return field_value;\r\n}\r\n\r\n/**\r\n * Match option titles with its slugs, and save slugs\r\n *\r\n * @since 3.1.1\r\n * @param slugs     Option slugs. e.g. ['subscriber','new_customer']\r\n * @param options   Available options as objects with slug and title. e.g. [{slug: 'subscriber', title: 'Subscriber'}, {slug: 'new_customer', title: 'New Customer'}]\r\n *\r\n * @return {array}  Option slugs. e.g. ['subscriber','new_customer']\r\n */\r\nexport const getOptionSlugs = function( slugs, options ) {\r\n    let slugs_array = [];\r\n\r\n    slugs.map(\r\n        ( option_title ) => {\r\n            const matching_slug = options.find( ( item ) => {\r\n                return item.title === option_title;\r\n            } );\r\n            if ( matching_slug !== undefined ) {\r\n                slugs_array.push( matching_slug.slug );\r\n            }\r\n        }\r\n    )\r\n\r\n    return slugs_array;\r\n}\r\n","import { AdvDateTimeControl, AdvDaysControl, AdvTimeControl, AdvTimezoneControl } from \"../0-adv-components/datetime.jsx\";\r\nimport {\r\n    getOptionSuggestions,\r\n    getOptionTitles,\r\n    getOptionSlugs\r\n} from \"../0-adv-components/utils.jsx\";\r\n\r\n(function (wpI18n, wpComponents, wpElement, wpData) {\r\n    const { __, sprintf } = wpI18n;\r\n    const {\r\n        Card,\r\n        CardBody,\r\n        CardHeader,\r\n        Button,\r\n        TextControl,\r\n        TextareaControl,\r\n        SelectControl,\r\n        ToggleControl,\r\n        RangeControl,\r\n        FormTokenField,\r\n        Modal,\r\n        Notice,\r\n        Spinner,\r\n        PanelBody,\r\n        BaseControl,\r\n        RadioControl,\r\n        DateTimePicker\r\n    } = wpComponents;\r\n    const { Component, Fragment } = wpElement;\r\n    const { useSelect, useDispatch } = wpData;\r\n\r\n\r\n\r\n    const ScheduleControl = ({ index, schedule, onChange, onRemove, getTimezoneLabel, getTimezoneSlug, canRemove }) => {\r\n        return (\r\n            <div style={{\r\n                marginBottom: 5,\r\n                padding: 5,\r\n                border: '1px solid #ddd',\r\n                borderRadius: 4\r\n            }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                    <h4>{sprintf(__('Schedule #%d', 'advanced-gutenberg'), index + 1)}</h4>\r\n                    {canRemove && (\r\n                        <Button\r\n                            isDestructive\r\n                            isLink\r\n                            onClick={onRemove}\r\n                        >\r\n                            {__('Remove', 'advanced-gutenberg')}\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n\r\n                <AdvDateTimeControl\r\n                    buttonLabel={__('Now', 'advanced-gutenberg')}\r\n                    dateLabel={__('Start showing', 'advanced-gutenberg')}\r\n                    date={schedule.dateFrom}\r\n                    onChangeDate={(newDate) => onChange('dateFrom', newDate)}\r\n                    onDateClear={() => onChange('dateFrom', null)}\r\n                    onInvalidDate={false}\r\n                />\r\n                <AdvDateTimeControl\r\n                    buttonLabel={__('Never', 'advanced-gutenberg')}\r\n                    dateLabel={__('Stop showing', 'advanced-gutenberg')}\r\n                    date={schedule.dateTo || null}\r\n                    onChangeDate={(newDate) => onChange('dateTo', newDate)}\r\n                    onDateClear={() => onChange('dateTo', null)}\r\n                    onInvalidDate={(date) => {\r\n                        if (schedule.dateFrom) {\r\n                            let thisDate = new Date(date.getTime());\r\n                            thisDate.setHours(0, 0, 0, 0);\r\n                            let fromDate = new Date(schedule.dateFrom);\r\n                            fromDate.setHours(0, 0, 0, 0);\r\n                            return thisDate.getTime() < fromDate.getTime();\r\n                        }\r\n                        return false;\r\n                    }}\r\n                />\r\n\r\n                {(schedule.dateFrom && schedule.dateTo) &&\r\n                    <ToggleControl\r\n                        label={__('Recurring', 'advanced-gutenberg')}\r\n                        checked={schedule.recurring || false}\r\n                        onChange={() => onChange('recurring', !schedule.recurring)}\r\n                        help={__('If Recurring is enabled, this block will be displayed every year between the selected dates.', 'advanced-gutenberg')}\r\n                    />\r\n                }\r\n\r\n                <AdvDaysControl\r\n                    label={__('On these days (optional)', 'advanced-gutenberg')}\r\n                    days={schedule.days || []}\r\n                    onChangeDays={(value) => onChange('days', value)}\r\n                />\r\n\r\n                <label style={{ marginBottom: 8, display: 'block' }}>\r\n                    {__('Between these times (optional)', 'advanced-gutenberg')}\r\n                </label>\r\n                <AdvTimeControl\r\n                    label={__('From', 'advanced-gutenberg')}\r\n                    currentTime={schedule.timeFrom || null}\r\n                    onChangeTime={(newTime) => onChange('timeFrom', newTime)}\r\n                    onTimeClear={() => onChange('timeFrom', null)}\r\n                />\r\n                <AdvTimeControl\r\n                    label={__('To', 'advanced-gutenberg')}\r\n                    currentTime={schedule.timeTo || null}\r\n                    onChangeTime={(newTime) => onChange('timeTo', newTime)}\r\n                    onTimeClear={() => onChange('timeTo', null)}\r\n                />\r\n\r\n                {(\r\n                    schedule.timeFrom\r\n                    && schedule.timeTo\r\n                    && (\r\n                        '01/01/2020T' + schedule.timeFrom >= '01/01/2020T' + schedule.timeTo\r\n                    )\r\n                ) &&\r\n                    <Notice\r\n                        className=\"advgb-notice-sidebar\"\r\n                        status=\"warning\"\r\n                        isDismissible={false}\r\n                    >\r\n                        {__('\"To\" time should be after \"From\" time!', 'advanced-gutenberg')}\r\n                    </Notice>\r\n                }\r\n\r\n                <AdvTimezoneControl\r\n                    label={__('Timezone', 'advanced-gutenberg')}\r\n                    defaultTimezone={getTimezoneLabel()}\r\n                    value={schedule.timezone || getTimezoneSlug()}\r\n                    onChangeTimezone={(value) => onChange('timezone', value)}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    class PresetManager extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                presets: [],\r\n                currentPreset: this.getDefaultPreset(),\r\n                editingPreset: null,\r\n                showModal: false,\r\n                modalMode: 'create', // 'create' or 'edit',\r\n                loading: false,\r\n                saving: false,\r\n                error: null,\r\n                deleting: false,\r\n                deletingPresetId: null,\r\n                lastAction: null, // 'created', 'cancelled', 'deleted', 'saved', 'loaded'\r\n            };\r\n\r\n            this.handleModalClose = this.handleModalClose.bind(this);\r\n            this.createNewPreset = this.createNewPreset.bind(this);\r\n            this.editPreset = this.editPreset.bind(this);\r\n            this.savePreset = this.savePreset.bind(this);\r\n            this.deletePreset = this.deletePreset.bind(this);\r\n            this.addControlSet = this.addControlSet.bind(this);\r\n            this.removeControlSet = this.removeControlSet.bind(this);\r\n            this.addRuleToSet = this.addRuleToSet.bind(this);\r\n            this.removeRuleFromSet = this.removeRuleFromSet.bind(this);\r\n            this.updateRuleData = this.updateRuleData.bind(this);\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.setState({ loading: true });\r\n            this.initializePresets();\r\n            this.setupDataSync();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            if (this.dataUnsubscribe && window.AdvGBPresetData) {\r\n                window.AdvGBPresetData.unsubscribe(this.dataUnsubscribe);\r\n            }\r\n        }\r\n\r\n        setupDataSync() {\r\n            // Sync with global data changes\r\n            if (window.AdvGBPresetData && window.AdvGBPresetData.subscribe) {\r\n                this.dataUnsubscribe = window.AdvGBPresetData.subscribe((presets) => {\r\n                    this.setState({\r\n                        presets: Array.isArray(presets) ? presets : [],\r\n                        // Clear editing state if the current preset was deleted\r\n                        editingPreset: this.state.editingPreset && presets.find(p => p.id === this.state.editingPreset.id)\r\n                            ? this.state.editingPreset\r\n                            : null,\r\n                        currentPreset: this.state.currentPreset && presets.find(p => p.id === this.state.currentPreset.id)\r\n                            ? this.state.currentPreset\r\n                            : null\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        async createSamplePresets() {\r\n            this.setState({ loading: true, error: null });\r\n\r\n            try {\r\n                const response = await wp.apiFetch({\r\n                    path: '/advgb/v1/sample-presets',\r\n                    method: 'POST'\r\n                });\r\n\r\n                if (response.success) {\r\n                    if (window.AdvGBPresetData) {\r\n                        window.AdvGBPresetData.updatePresets(response.presets, 'add');\r\n                    }\r\n\r\n                    this.setState({\r\n                        presets: response.presets,\r\n                        lastAction: 'installed',\r\n                        loading: false\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to create sample presets:', error);\r\n                this.setState({\r\n                    error: __('Failed to create sample presets', 'advanced-gutenberg'),\r\n                    loading: false\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        async initializePresets() {\r\n            try {\r\n                await this.waitForGlobalData();\r\n\r\n                const presets = await this.loadPresetsFromSources();\r\n\r\n                this.setState({\r\n                    presets: presets,\r\n                    loading: false,\r\n                    currentPreset: this.getDefaultPreset()\r\n                });\r\n            } catch (error) {\r\n                console.error('Failed to initialize presets:', error);\r\n                this.setState({\r\n                    loading: false,\r\n                    error: __('Failed to load presets', 'advanced-gutenberg')\r\n                });\r\n            }\r\n        }\r\n\r\n        waitForGlobalData() {\r\n            return new Promise((resolve) => {\r\n                const checkData = () => {\r\n                    if (window.AdvGBPresetData || (window.advgb_block_controls_vars && window.advgb_block_controls_vars.presets)) {\r\n                        resolve();\r\n                    } else {\r\n                        setTimeout(checkData, 100);\r\n                    }\r\n                };\r\n                checkData();\r\n            });\r\n        }\r\n\r\n        async loadPresetsFromSources() {\r\n            try {\r\n                // Try API first\r\n                const response = await wp.apiFetch({\r\n                    path: '/advgb/v1/presets'\r\n                });\r\n\r\n                if (Array.isArray(response)) {\r\n                    return response;\r\n                }\r\n\r\n                // Fallback to global data\r\n                if (window.AdvGBPresetData && typeof window.AdvGBPresetData.getAllPresets === 'function') {\r\n                    const globalPresets = window.AdvGBPresetData.getAllPresets();\r\n                    if (Array.isArray(globalPresets)) {\r\n                        return globalPresets;\r\n                    }\r\n                }\r\n\r\n                // Final fallback\r\n                return [];\r\n\r\n            } catch (error) {\r\n                console.warn('Failed to load presets:', error);\r\n\r\n                // Try global data as fallback\r\n                if (window.AdvGBPresetData && typeof window.AdvGBPresetData.getAllPresets === 'function') {\r\n                    const globalPresets = window.AdvGBPresetData.getAllPresets();\r\n                    if (Array.isArray(globalPresets)) {\r\n                        return globalPresets;\r\n                    }\r\n                }\r\n\r\n                return [];\r\n            }\r\n        }\r\n\r\n        async loadPresets() {\r\n            this.setState({ loading: true });\r\n            try {\r\n                const presets = await this.loadPresetsFromSources();\r\n                this.setState({\r\n                    presets: presets,\r\n                    loading: false,\r\n                    lastAction: presets.length > 0 ? 'loaded' : 'empty'\r\n                });\r\n            } catch (error) {\r\n                console.error('Failed to load presets:', error);\r\n                this.setState({\r\n                    error: __('Failed to load presets', 'advanced-gutenberg'),\r\n                    loading: false,\r\n                    lastAction: 'error'\r\n                });\r\n            }\r\n        }\r\n\r\n        getDefaultPreset() {\r\n            return {\r\n                id: null,\r\n                title: '',\r\n                controlSets: [],\r\n                created: null,\r\n                modified: null\r\n            };\r\n        }\r\n\r\n        loadPresets() {\r\n            if (window.AdvGBPresetData) {\r\n                this.setState({\r\n                    presets: window.AdvGBPresetData.getAllPresets(),\r\n                    loading: false\r\n                });\r\n            }\r\n        }\r\n\r\n        async savePreset(presetData) {\r\n            this.setState({ saving: true, error: null });\r\n\r\n            try {\r\n                const response = await wp.apiFetch({\r\n                    path: '/advgb/v1/presets',\r\n                    method: 'POST',\r\n                    data: presetData\r\n                });\r\n\r\n                if (response.success) {\r\n                    await this.loadPresets();\r\n\r\n                    const newPreset = response.presets.find(p => p.id === response.id);\r\n                    if (newPreset) {\r\n\r\n                        const updatedPresets = response.presets || [];\r\n                        // Update global preset data\r\n                        if (window.AdvGBPresetData) {\r\n                            window.AdvGBPresetData.updatePresets(updatedPresets);\r\n                        }\r\n\r\n                        this.setState({\r\n                            editingPreset: null,\r\n                            currentPreset: null,\r\n                            saving: false,\r\n                            showModal: false,\r\n                            lastAction: 'saved'\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            saving: false,\r\n                            showModal: false,\r\n                            lastAction: 'saved'\r\n                        });\r\n                    }\r\n                    return response;\r\n                }\r\n            } catch (error) {\r\n                this.setState({\r\n                    error: error.message,\r\n                    saving: false,\r\n                    lastAction: 'error'\r\n                });\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        async deletePreset(presetId) {\r\n\r\n            this.setState({\r\n                deleting: true,\r\n                deletingPresetId: presetId\r\n            });\r\n\r\n            try {\r\n                const response = await wp.apiFetch({\r\n                    path: `/advgb/v1/presets/${presetId}`,\r\n                    method: 'DELETE'\r\n                });\r\n                if (response.success) {\r\n                    if (window.AdvGBPresetData) {\r\n                        window.AdvGBPresetData.updatePresets(response.presets, 'delete');\r\n                    }\r\n\r\n                    if (this.state.editingPreset && this.state.editingPreset.id === presetId) {\r\n                        this.setState({\r\n                            editingPreset: null,\r\n                            currentPreset: this.getDefaultPreset()\r\n                        });\r\n                    }\r\n\r\n                    this.setState({\r\n                        deleting: false,\r\n                        deletingPresetId: null,\r\n                        currentPreset: null,\r\n                        editingPreset: null,\r\n                        lastAction: 'deleted'\r\n                    });\r\n\r\n                    await this.loadPresets();\r\n                }\r\n            } catch (error) {\r\n                this.setState({\r\n                    deleting: false,\r\n                    deletingPresetId: null,\r\n                    error: error.message\r\n                });\r\n            }\r\n        }\r\n\r\n        createNewPreset() {\r\n            this.setState({\r\n                currentPreset: this.getDefaultPreset(),\r\n                editingPreset: null,\r\n                modalMode: 'create',\r\n                showModal: true,\r\n                lastAction: 'creating'\r\n            });\r\n        }\r\n\r\n        editPreset(preset) {\r\n            this.setState({\r\n                currentPreset: { ...preset },\r\n                modalMode: 'edit',\r\n                editingPreset: preset,\r\n                showModal: true,\r\n                lastAction: 'editing'\r\n            });\r\n        }\r\n\r\n        toggleControlSet(setIndex) {\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = [...currentPreset.controlSets];\r\n\r\n            const isCurrentlyExpanded = newControlSets[setIndex].expanded !== false;\r\n            newControlSets[setIndex].expanded = !isCurrentlyExpanded;\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        toggleRule(setIndex, ruleIndex) {\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = [...currentPreset.controlSets];\r\n\r\n            const isCurrentlyExpanded = newControlSets[setIndex].rules[ruleIndex].expanded !== false;\r\n            newControlSets[setIndex].rules[ruleIndex].expanded = !isCurrentlyExpanded;\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        isControlSetExpanded(setIndex) {\r\n            const { currentPreset } = this.state;\r\n            if (!currentPreset.controlSets || !currentPreset.controlSets[setIndex]) {\r\n                return true;\r\n            }\r\n            return currentPreset.controlSets[setIndex].expanded !== false;\r\n        }\r\n\r\n        isRuleExpanded(setIndex, ruleIndex) {\r\n            const { currentPreset } = this.state;\r\n            if (!currentPreset.controlSets ||\r\n                !currentPreset.controlSets[setIndex] ||\r\n                !currentPreset.controlSets[setIndex].rules ||\r\n                !currentPreset.controlSets[setIndex].rules[ruleIndex]) {\r\n                return true;\r\n            }\r\n            return currentPreset.controlSets[setIndex].rules[ruleIndex].expanded !== false;\r\n        }\r\n\r\n        addControlSet() {\r\n            const newControlSet = {\r\n                id: Date.now().toString(),\r\n                rules: [],\r\n                expanded: true\r\n            };\r\n\r\n            const updatedControlSets = [newControlSet, ...this.state.currentPreset.controlSets];\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...this.state.currentPreset,\r\n                    controlSets: updatedControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        removeControlSet(setIndex) {\r\n\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = currentPreset.controlSets.filter((_, index) => index !== setIndex);\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        addRuleToSet(setIndex, ruleType) {\r\n            const newRule = this.createRuleByType(ruleType);\r\n\r\n            const updatedControlSets = [...this.state.currentPreset.controlSets];\r\n            updatedControlSets[setIndex].rules.unshift(newRule);\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...this.state.currentPreset,\r\n                    controlSets: updatedControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        createRuleByType(ruleType) {\r\n            const baseRule = {\r\n                id: Date.now(),\r\n                type: ruleType,\r\n                enabled: true,\r\n                expanded: true\r\n            };\r\n\r\n            switch (ruleType) {\r\n                case 'schedule':\r\n                    return { ...baseRule, schedules: [] };\r\n                case 'user_role':\r\n                    return { ...baseRule, roles: [], approach: 'include' };\r\n                case 'device_type':\r\n                    return { ...baseRule, devices: [] };\r\n                case 'device_width':\r\n                    return { ...baseRule, min_width: '', max_width: '' };\r\n                case 'browser_device':\r\n                    return { ...baseRule, browsers: [], approach: 'include' };\r\n                case 'operating_system':\r\n                    return { ...baseRule, systems: [], approach: 'include' };\r\n                case 'cookie':\r\n                    return { ...baseRule, name: '', condition: '=', value: '', approach: 'include' };\r\n                case 'user_meta':\r\n                    return { ...baseRule, key: '', condition: '=', value: '', approach: 'include' };\r\n                case 'post_meta':\r\n                    return { ...baseRule, key: '', condition: '=', value: '', approach: 'include' };\r\n                case 'query_string':\r\n                    return { ...baseRule, queries: [], logic: 'all', approach: 'include' };\r\n                case 'capabilities':\r\n                    return { ...baseRule, capabilities: [], approach: 'include' };\r\n                case 'archive':\r\n                    return { ...baseRule, taxonomies: [], approach: 'include' };\r\n                case 'page':\r\n                    return { ...baseRule, pages: [], approach: 'include' };\r\n                default:\r\n                    return baseRule;\r\n            }\r\n        }\r\n\r\n        getAvailableRuleTypes() {\r\n            return [\r\n                { value: 'schedule', label: __('Schedule', 'advanced-gutenberg') },\r\n                { value: 'user_role', label: __('User Roles', 'advanced-gutenberg') },\r\n                { value: 'device_type', label: __('Device Type', 'advanced-gutenberg') },\r\n                { value: 'device_width', label: __('Device Width', 'advanced-gutenberg') },\r\n                { value: 'browser_device', label: __('Browser', 'advanced-gutenberg') },\r\n                { value: 'operating_system', label: __('Operating System', 'advanced-gutenberg') },\r\n                { value: 'cookie', label: __('Cookie', 'advanced-gutenberg') },\r\n                { value: 'user_meta', label: __('User Meta', 'advanced-gutenberg') },\r\n                { value: 'post_meta', label: __('Post Meta', 'advanced-gutenberg') },\r\n                { value: 'query_string', label: __('Query String', 'advanced-gutenberg') },\r\n                { value: 'capabilities', label: __('Capabilities', 'advanced-gutenberg') },\r\n                { value: 'archive', label: __('Archive', 'advanced-gutenberg') },\r\n                { value: 'page', label: __('Page', 'advanced-gutenberg') }\r\n            ];\r\n        }\r\n\r\n        formatDate(dateString) {\r\n            if (!dateString) return __('Never modified', 'advanced-gutenberg');\r\n\r\n            try {\r\n                const date = new Date(dateString);\r\n\r\n                if (isNaN(date.getTime())) {\r\n                    return __('Invalid date', 'advanced-gutenberg');\r\n                }\r\n\r\n                // Format: Sep 12, 2025 2:30 PM\r\n                return date.toLocaleDateString('en-US', {\r\n                    month: 'short',\r\n                    day: 'numeric',\r\n                    year: 'numeric',\r\n                    hour: 'numeric',\r\n                    minute: '2-digit',\r\n                    hour12: true\r\n                });\r\n            } catch (error) {\r\n                console.error('Date formatting error:', error);\r\n                return __('Invalid date', 'advanced-gutenberg');\r\n            }\r\n        }\r\n\r\n        getRuleTypeLabel(ruleType) {\r\n            const ruleTypes = this.getAvailableRuleTypes();\r\n            const ruleTypeObj = ruleTypes.find(type => type.value === ruleType);\r\n            return ruleTypeObj ? ruleTypeObj.label : ruleType;\r\n        }\r\n\r\n\r\n        renderPresetList() {\r\n            const { presets, editingPreset } = this.state;\r\n\r\n            return (\r\n                <div className=\"advgb-presets-list\">\r\n                    {(!presets || presets.length === 0) && (\r\n                        <div className=\"advgb-empty-presets-message\">\r\n                            <div className=\"advgb-empty-icon\">📋</div>\r\n                            <h3>{__('No presets yet', 'advanced-gutenberg')}</h3>\r\n                            <p>{__('Create your first preset or generate sample presets to get started.', 'advanced-gutenberg')}</p>\r\n                            <div className=\"advgb-empty-actions\">\r\n                                <Button\r\n                                    isPrimary\r\n                                    onClick={() => this.createNewPreset()}\r\n                                    className=\"advgb-create-first-btn\"\r\n                                >\r\n                                    {__('Create First Preset', 'advanced-gutenberg')}\r\n                                </Button>\r\n                                <Button\r\n                                    isSecondary\r\n                                    onClick={() => this.createSamplePresets()}\r\n                                    className=\"advgb-create-samples-btn\"\r\n                                >\r\n                                    {__('Create Sample Presets', 'advanced-gutenberg')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {presets && presets.length > 0 && presets.map(preset => {\r\n                        const isActive = editingPreset && editingPreset.id === preset.id;\r\n                        const itemClasses = [\r\n                            'advgb-preset-item',\r\n                            isActive && 'active'\r\n                        ].filter(Boolean).join(' ');\r\n\r\n                        return (\r\n                            <div\r\n                                key={preset.id}\r\n                                className={itemClasses}\r\n                                onClick={() => this.editPreset(preset)}\r\n                            >\r\n                                <div className=\"advgb-preset-content\">\r\n                                    <span className=\"advgb-preset-title\" title={preset.title}>{preset.title}</span>\r\n                                </div>\r\n                                <div className=\"advgb-preset-list-actions\">\r\n                                    <Button\r\n                                        isSmall\r\n                                        icon=\"edit\"\r\n                                        label={__('Edit', 'advanced-gutenberg')}\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            this.editPreset(preset);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        renderPresetForm() {\r\n            const { currentPreset, saving } = this.state;\r\n\r\n            if (!currentPreset) return null;\r\n\r\n            return (\r\n                <div className=\"advgb-preset-form\">\r\n                    <div className=\"advgb-preset-header\">\r\n                        <div className=\"advgb-preset-title-section\">\r\n                            <TextControl\r\n                                label={__('Preset Title', 'advanced-gutenberg')}\r\n                                value={currentPreset.title || ''}\r\n                                onChange={(title) => this.setState({\r\n                                    currentPreset: { ...currentPreset, title }\r\n                                })}\r\n                                placeholder={__('Enter preset name', 'advanced-gutenberg')}\r\n                                className=\"advgb-title-input\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"advgb-control-sets-container\">\r\n                        <div className=\"advgb-control-sets-header\">\r\n                            <h3>{__('Control Sets', 'advanced-gutenberg')}</h3>\r\n                            <p className=\"advgb-control-sets-description\">\r\n                                {__('Show the block if any control set applies. Each set can contain multiple rules.', 'advanced-gutenberg')}\r\n                            </p>\r\n                            <Button\r\n                                isPrimary\r\n                                icon=\"plus\"\r\n                                onClick={this.addControlSet}\r\n                                className=\"advgb-add-set-btn\"\r\n                            >\r\n                                {__('Add Control Set', 'advanced-gutenberg')}\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"advgb-control-sets\">\r\n                            {(currentPreset.controlSets || []).map((controlSet, index) => (\r\n                                <Fragment key={controlSet.id || index}>\r\n                                    {index > 0 && (\r\n                                        <div className=\"advgb-set-separator\">\r\n                                            <span className=\"advgb-separator-text\">{__('OR', 'advanced-gutenberg')}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {this.renderControlSet(controlSet, index)}\r\n                                </Fragment>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"advgb-preset-actions\">\r\n                        {currentPreset.id && (\r\n                            <div className=\"ppb-tooltips-library click advgb-delete-preset-tooltip\" data-toggle=\"ppbtooltip\" data-placement=\"top\">\r\n                                <Button\r\n                                    className=\"advgb-delete-preset-btn is-destructive-outline\"\r\n                                    icon=\"trash\"\r\n                                    label={__('Delete Preset', 'advanced-gutenberg')}\r\n                                >\r\n                                    {__('Delete Preset', 'advanced-gutenberg')}\r\n                                </Button>\r\n                                <div className=\"tooltip-text\">\r\n                                    <p>\r\n                                        {__('Are you sure you want to delete preset?', 'advanced-gutenberg')}\r\n                                        <Button\r\n                                            isSmall\r\n                                            isDestructive\r\n                                            label={__('Delete Preset', 'advanced-gutenberg')}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.deletePreset(currentPreset.id);\r\n                                            }}\r\n                                        >\r\n                                            <strong>\r\n                                                {__('Yes, Delete Preset.', 'advanced-gutenberg')}\r\n                                            </strong>\r\n                                        </Button>\r\n                                        |\r\n                                        <Button\r\n                                            isSmall\r\n                                            label={__('No, Cancel', 'advanced-gutenberg')}\r\n                                        >\r\n                                            {__('No, Cancel.', 'advanced-gutenberg')}\r\n                                        </Button>\r\n                                    </p>\r\n                                    <i></i>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <Button\r\n                            isPrimary\r\n                            onClick={() => this.savePreset(this.state.currentPreset)}\r\n                            disabled={saving || !currentPreset.title}\r\n                            isBusy={saving}\r\n                            className=\"advgb-save-btn\"\r\n                        >\r\n                            {saving ? __('Saving...', 'advanced-gutenberg') : __('Save Preset', 'advanced-gutenberg')}\r\n                        </Button>\r\n                        <Button\r\n                            isSecondary\r\n                            onClick={this.handleModalClose}\r\n                            disabled={saving}\r\n                        >\r\n                            {__('Cancel', 'advanced-gutenberg')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        renderControlSet(controlSet, setIndex) {\r\n            const isExpanded = this.isControlSetExpanded(setIndex);\r\n\r\n            return (\r\n                <div className=\"advgb-control-set\" key={controlSet.id || setIndex}>\r\n                    <div className=\"advgb-control-set-header\">\r\n                        <div\r\n                            className=\"advgb-set-info advgb-preset-clickable-area\"\r\n                            onClick={() => this.toggleControlSet(setIndex)}\r\n                        >\r\n                            <div className=\"advgb-set-title-row\">\r\n                                <span className={`dashicons dashicons-arrow-${isExpanded ? 'down' : 'right'}`}></span>\r\n                                <div className=\"title-row-text\">\r\n                                <h4>{__('Control Set', 'advanced-gutenberg')} {setIndex + 1}</h4>\r\n                                <p>{__('Show the block if any rule applies. Rules are evaluated with AND logic.', 'advanced-gutenberg')}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"advgb-set-actions\">\r\n                            <SelectControl\r\n                                value=\"\"\r\n                                options={[\r\n                                    { value: '', label: __('Add Rule', 'advanced-gutenberg') },\r\n                                    ...this.getAvailableRuleTypes()\r\n                                ]}\r\n                                onChange={(ruleType) => {\r\n                                    if (ruleType) {\r\n                                        this.addRuleToSet(setIndex, ruleType);\r\n                                    }\r\n                                }}\r\n                                className=\"advgb-add-rule-select\"\r\n                            />\r\n                            <div className=\"ppb-tooltips-library click\" data-toggle=\"ppbtooltip\" data-placement=\"left\">\r\n                                <Button\r\n                                    isSmall\r\n                                    isDestructive\r\n                                    icon=\"trash\"\r\n                                    label={__('Delete Set', 'advanced-gutenberg')}\r\n                                />\r\n                                <div className=\"tooltip-text\">\r\n                                    <p>\r\n                                        {__('Are you sure you want to delete set?', 'advanced-gutenberg')}\r\n                                        <Button\r\n                                            isSmall\r\n                                            isDestructive\r\n                                            label={__('Delete Set', 'advanced-gutenberg')}\r\n                                            onClick={() => this.removeControlSet(setIndex)}\r\n                                        >\r\n                                            <strong>\r\n                                                {__('Yes, Delete Set.', 'advanced-gutenberg')}\r\n                                            </strong>\r\n                                        </Button>\r\n                                        |\r\n                                        <Button\r\n                                            isSmall\r\n                                            label={__('No, Cancel', 'advanced-gutenberg')}\r\n                                        >\r\n                                            {__('No, Cancel.', 'advanced-gutenberg')}\r\n                                        </Button>\r\n                                    </p>\r\n                                    <i></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isExpanded && (\r\n                        <div className=\"advgb-control-set-rules\">\r\n                            {(controlSet.rules || []).map((rule, ruleIndex) => (\r\n                                <div key={rule.id || ruleIndex} className=\"advgb-rule-container\">\r\n                                    {ruleIndex > 0 && (\r\n                                        <div className=\"advgb-rule-separator\">\r\n                                            <span className=\"advgb-separator-text\">{__('AND', 'advanced-gutenberg')}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {this.renderControlRule(rule, setIndex, ruleIndex)}\r\n                                </div>\r\n                            ))}\r\n\r\n                            {(!controlSet.rules || controlSet.rules.length === 0) && (\r\n                                <div className=\"advgb-no-rules\">\r\n                                    <div className=\"advgb-no-rules-icon\">⚡</div>\r\n                                    <p>{__('No rules added yet. Add rules to define when this block should be visible.', 'advanced-gutenberg')}</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        renderControlRule(rule, setIndex, ruleIndex) {\r\n            const isExpanded = this.isRuleExpanded(setIndex, ruleIndex);\r\n\r\n            return (\r\n                <div className=\"advgb-control-rule\">\r\n                    <div className=\"advgb-rule-header\">\r\n                        <div\r\n                            className=\"advgb-rule-type advgb-preset-clickable-area\"\r\n                            onClick={() => this.toggleRule(setIndex, ruleIndex)}\r\n                        >\r\n                            <span className={`dashicons dashicons-arrow-${isExpanded ? 'down' : 'right'}`}></span>\r\n                            <span className=\"advgb-rule-type-icon\">📋</span>\r\n                            <span className=\"advgb-rule-type-label\">{this.getRuleTypeLabel(rule.type)}</span>\r\n                        </div>\r\n                        <div className=\"advgb-rule-actions\">\r\n                            <div className=\"ppb-tooltips-library click\" data-toggle=\"ppbtooltip\" data-placement=\"left\">\r\n                                <Button\r\n                                    isSmall\r\n                                    isDestructive\r\n                                    icon=\"trash\"\r\n                                    label={__('Remove Rule', 'advanced-gutenberg')}\r\n                                />\r\n                                <div className=\"tooltip-text\">\r\n                                    <p>\r\n                                        {__('Are you sure you want to remove rule?', 'advanced-gutenberg')}\r\n                                        <Button\r\n                                            isSmall\r\n                                            isDestructive\r\n                                            label={__('Remove Rule', 'advanced-gutenberg')}\r\n                                            onClick={() => this.removeRuleFromSet(setIndex, ruleIndex)}\r\n                                        >\r\n                                            <strong>\r\n                                                {__('Yes, Remove Rule.', 'advanced-gutenberg')}\r\n                                            </strong>\r\n                                        </Button>\r\n                                        |\r\n                                        <Button\r\n                                            isSmall\r\n                                            label={__('No, Cancel', 'advanced-gutenberg')}\r\n                                        >\r\n                                            {__('No, Cancel.', 'advanced-gutenberg')}\r\n                                        </Button>\r\n                                    </p>\r\n                                    <i></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isExpanded && (\r\n                        <div className=\"advgb-rule-content\">\r\n                            {this.renderRuleConfiguration(rule, setIndex, ruleIndex)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        renderRuleConfiguration(rule, setIndex, ruleIndex) {\r\n            switch (rule.type) {\r\n                case 'schedule':\r\n                    return this.renderScheduleConfig(rule, setIndex, ruleIndex);\r\n                case 'user_role':\r\n                    return this.renderUserRoleConfig(rule, setIndex, ruleIndex);\r\n                case 'device_type':\r\n                    return this.renderDeviceTypeConfig(rule, setIndex, ruleIndex);\r\n                case 'device_width':\r\n                    return this.renderDeviceWidthConfig(rule, setIndex, ruleIndex);\r\n                case 'browser_device':\r\n                    return this.renderBrowserDeviceConfig(rule, setIndex, ruleIndex);\r\n                case 'operating_system':\r\n                    return this.renderOperatingSystemConfig(rule, setIndex, ruleIndex);\r\n                case 'cookie':\r\n                    return this.renderCookieConfig(rule, setIndex, ruleIndex);\r\n                case 'user_meta':\r\n                    return this.renderUserMetaConfig(rule, setIndex, ruleIndex);\r\n                case 'post_meta':\r\n                    return this.renderPostMetaConfig(rule, setIndex, ruleIndex);\r\n                case 'query_string':\r\n                    return this.renderQueryStringConfig(rule, setIndex, ruleIndex);\r\n                case 'capabilities':\r\n                    return this.renderCapabilitiesConfig(rule, setIndex, ruleIndex);\r\n                case 'archive':\r\n                    return this.renderArchiveConfig(rule, setIndex, ruleIndex);\r\n                case 'page':\r\n                    return this.renderPageConfig(rule, setIndex, ruleIndex);\r\n                default:\r\n                    return <p>{__('Configuration for this rule type is missing.', 'advanced-gutenberg')}</p>;\r\n            }\r\n        }\r\n\r\n        updateRuleData(setIndex, ruleIndex, key, value) {\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = [...currentPreset.controlSets];\r\n            newControlSets[setIndex].rules[ruleIndex][key] = value;\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        removeRuleFromSet(setIndex, ruleIndex) {\r\n\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = [...currentPreset.controlSets];\r\n            newControlSets[setIndex].rules.splice(ruleIndex, 1);\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        handleModalClose() {\r\n            this.setState({\r\n                showModal: false,\r\n                currentPreset: null,\r\n                editingPreset: null,\r\n                modalMode: 'create',\r\n                lastAction: 'cancelled'\r\n            });\r\n        }\r\n\r\n        getBrowserOptions() {\r\n            return [\r\n                { slug: 'chrome', title: 'Chrome' },\r\n                { slug: 'firefox', title: 'Firefox' },\r\n                { slug: 'safari', title: 'Safari' },\r\n                { slug: 'edge', title: 'Edge' },\r\n                { slug: 'opera', title: 'Opera' },\r\n                { slug: 'internet explorer', title: 'Internet Explorer' }\r\n            ];\r\n        }\r\n\r\n        getOperatingSystemOptions() {\r\n            return [\r\n                { slug: 'windows', title: 'Windows' },\r\n                { slug: 'mac', title: 'macOS' },\r\n                { slug: 'linux', title: 'Linux' },\r\n                { slug: 'android', title: 'Android' },\r\n                { slug: 'ios', title: 'iOS' },\r\n                { slug: 'chrome os', title: 'Chrome OS' }\r\n            ];\r\n        }\r\n\r\n        getConditionOptions() {\r\n            return [\r\n                { label: '=', value: '=' },\r\n                { label: '!=', value: '!=' },\r\n                { label: '<', value: '<' },\r\n                { label: '>', value: '>' },\r\n                { label: '<=', value: '<=' },\r\n                { label: '>=', value: '>=' },\r\n                { label: 'contains', value: 'contains' },\r\n                { label: 'begins with', value: 'beginsWith' },\r\n                { label: 'ends with', value: 'endsWith' },\r\n                { label: 'does not contain', value: 'doesNotContain' },\r\n                { label: 'does not begin with', value: 'doesNotBeginWith' },\r\n                { label: 'does not end with', value: 'doesNotEndWith' },\r\n                { label: 'is null', value: 'null' },\r\n                { label: 'is not null', value: 'notNull' }\r\n            ];\r\n        }\r\n\r\n        getUserRoles() {\r\n            return typeof advgb_block_controls_vars.user_roles !== 'undefined'\r\n                && advgb_block_controls_vars.user_roles.length > 0\r\n                ? advgb_block_controls_vars.user_roles\r\n                : [];\r\n        }\r\n\r\n        getCapabilitiesOptions() {\r\n            const capabilities = typeof advgb_block_controls_vars.capabilities !== 'undefined'\r\n                ? advgb_block_controls_vars.capabilities\r\n                : [];\r\n\r\n            return capabilities.map(cap => ({\r\n                slug: cap,\r\n                title: cap.split('_').map(word =>\r\n                    word.charAt(0).toUpperCase() + word.slice(1)\r\n                ).join(' ')\r\n            }));\r\n        }\r\n\r\n        getArchiveOptions() {\r\n            return typeof advgb_block_controls_vars.taxonomies !== 'undefined'\r\n                && advgb_block_controls_vars.taxonomies.length > 0\r\n                ? advgb_block_controls_vars.taxonomies\r\n                : [];\r\n        }\r\n\r\n        getPageOptions() {\r\n            return typeof advgb_block_controls_vars.page !== 'undefined'\r\n                && advgb_block_controls_vars.page.length > 0\r\n                ? advgb_block_controls_vars.page\r\n                : [];\r\n        }\r\n\r\n        getTimezoneLabel() {\r\n            return __('WordPress settings timezone', 'advanced-gutenberg');\r\n        }\r\n\r\n        getTimezoneSlug() {\r\n            return typeof advgbBlocks.timezone !== 'undefined' && advgbBlocks.timezone.length\r\n                ? advgbBlocks.timezone\r\n                : 'UTC';\r\n        }\r\n\r\n\r\n        renderScheduleConfig(rule, setIndex, ruleIndex) {\r\n            const schedules = rule.schedules && rule.schedules.length > 0\r\n                ? rule.schedules\r\n                : [{\r\n                    dateFrom: null,\r\n                    dateTo: null,\r\n                    recurring: false,\r\n                    days: [],\r\n                    timeFrom: null,\r\n                    timeTo: null,\r\n                    timezone: this.getTimezoneSlug()\r\n                }];\r\n\r\n            return (\r\n                <Fragment>\r\n                    {schedules.map((schedule, scheduleIndex) => (\r\n                        <ScheduleControl\r\n                            key={scheduleIndex}\r\n                            index={scheduleIndex}\r\n                            schedule={schedule}\r\n                            onChange={(key, value) => {\r\n                                const updatedSchedules = [...schedules];\r\n                                updatedSchedules[scheduleIndex][key] = value;\r\n                                this.updateRuleData(setIndex, ruleIndex, 'schedules', updatedSchedules);\r\n                            }}\r\n                            onRemove={() => {\r\n                                if (schedules.length > 1) {\r\n                                    const updatedSchedules = schedules.filter((_, idx) => idx !== scheduleIndex);\r\n                                    this.updateRuleData(setIndex, ruleIndex, 'schedules', updatedSchedules);\r\n                                }\r\n                            }}\r\n                            getTimezoneLabel={() => this.getTimezoneLabel()}\r\n                            getTimezoneSlug={() => this.getTimezoneSlug()}\r\n                            canRemove={schedules.length > 1}\r\n                        />\r\n                    ))}\r\n                    <div style={{ marginBottom: 16 }}>\r\n                        <Button\r\n                            style={{ width: '100%', display: 'block' }}\r\n                            isSecondary\r\n                            onClick={() => {\r\n                                const newSchedule = {\r\n                                    dateFrom: null,\r\n                                    dateTo: null,\r\n                                    recurring: false,\r\n                                    days: [],\r\n                                    timeFrom: null,\r\n                                    timeTo: null,\r\n                                    timezone: this.getTimezoneSlug()\r\n                                };\r\n                                this.updateRuleData(setIndex, ruleIndex, 'schedules', [...schedules, newSchedule]);\r\n                            }}\r\n                        >\r\n                            {__('Add Another Schedule', 'advanced-gutenberg')}\r\n                        </Button>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderUserRoleConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'public'}\r\n                        options={[\r\n                            { value: 'public', label: __('Show to everyone', 'advanced-gutenberg') },\r\n                            { value: 'hidden', label: __('Hide from everyone', 'advanced-gutenberg') },\r\n                            { value: 'login', label: __('Show to logged in users', 'advanced-gutenberg') },\r\n                            { value: 'logout', label: __('Show to logged out users', 'advanced-gutenberg') },\r\n                            { value: 'include', label: __('Show to selected user roles', 'advanced-gutenberg') },\r\n                            { value: 'exclude', label: __('Hide from selected user roles', 'advanced-gutenberg') }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                    {(rule.approach === 'include' || rule.approach === 'exclude') && (\r\n                        <FormTokenField\r\n                            multiple\r\n                            label={__('Select user roles', 'advanced-gutenberg')}\r\n                            placeholder={__('Search roles', 'advanced-gutenberg')}\r\n                            suggestions={getOptionSuggestions(this.getUserRoles())}\r\n                            maxSuggestions={10}\r\n                            value={getOptionTitles(rule.roles || [], this.getUserRoles())}\r\n                            onChange={(value) => {\r\n                                this.updateRuleData(setIndex, ruleIndex, 'roles', getOptionSlugs(value, this.getUserRoles()));\r\n                            }}\r\n                            __experimentalExpandOnFocus\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderDeviceTypeConfig(rule, setIndex, ruleIndex) {\r\n            const devices = rule.devices || [];\r\n            return (\r\n                <Fragment>\r\n                    <div style={{ paddingLeft: '17%' }}>\r\n                        {['desktop', 'tablet', 'mobile', 'robot'].map(deviceType => (\r\n                            <ToggleControl\r\n                                key={deviceType}\r\n                                label={__(deviceType.charAt(0).toUpperCase() + deviceType.slice(1), 'advanced-gutenberg')}\r\n                                checked={devices.includes(deviceType)}\r\n                                onChange={() => {\r\n                                    const newDevices = devices.includes(deviceType)\r\n                                        ? devices.filter(d => d !== deviceType)\r\n                                        : [...devices, deviceType];\r\n                                    this.updateRuleData(setIndex, ruleIndex, 'devices', newDevices);\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderDeviceWidthConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <TextControl\r\n                        type=\"number\"\r\n                        label={__('Minimum width (px)', 'advanced-gutenberg')}\r\n                        value={rule.min_width || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'min_width', value)}\r\n                        placeholder={__('No minimum', 'advanced-gutenberg')}\r\n                    />\r\n                    <TextControl\r\n                        type=\"number\"\r\n                        label={__('Maximum width (px)', 'advanced-gutenberg')}\r\n                        value={rule.max_width || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'max_width', value)}\r\n                        placeholder={__('No maximum', 'advanced-gutenberg')}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderBrowserDeviceConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <FormTokenField\r\n                        multiple\r\n                        label={__('Select Browsers', 'advanced-gutenberg')}\r\n                        placeholder={__('Search browsers', 'advanced-gutenberg')}\r\n                        suggestions={getOptionSuggestions(this.getBrowserOptions())}\r\n                        maxSuggestions={10}\r\n                        value={getOptionTitles(rule.browsers || [], this.getBrowserOptions())}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'browsers', getOptionSlugs(value, this.getBrowserOptions()));\r\n                        }}\r\n                        __experimentalExpandOnFocus\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show to selected browsers', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide from selected browsers', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderOperatingSystemConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <FormTokenField\r\n                        multiple\r\n                        label={__('Select Operating Systems', 'advanced-gutenberg')}\r\n                        placeholder={__('Search operating systems', 'advanced-gutenberg')}\r\n                        suggestions={getOptionSuggestions(this.getOperatingSystemOptions())}\r\n                        maxSuggestions={10}\r\n                        value={getOptionTitles(rule.systems || [], this.getOperatingSystemOptions())}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'systems', getOptionSlugs(value, this.getOperatingSystemOptions()));\r\n                        }}\r\n                        __experimentalExpandOnFocus\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show to selected OS', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide from selected OS', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderCookieConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <TextControl\r\n                        label={__('Cookie Name', 'advanced-gutenberg')}\r\n                        value={rule.name || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'name', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Condition', 'advanced-gutenberg')}\r\n                        value={rule.condition || '='}\r\n                        options={this.getConditionOptions()}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'condition', value)}\r\n                    />\r\n                    <TextControl\r\n                        label={__('Value', 'advanced-gutenberg')}\r\n                        value={rule.value || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'value', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show when condition matches', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide when condition matches', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderUserMetaConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <TextControl\r\n                        label={__('Meta Key', 'advanced-gutenberg')}\r\n                        value={rule.key || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'key', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Condition', 'advanced-gutenberg')}\r\n                        value={rule.condition || '='}\r\n                        options={this.getConditionOptions()}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'condition', value)}\r\n                    />\r\n                    <TextControl\r\n                        label={__('Value', 'advanced-gutenberg')}\r\n                        value={rule.value || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'value', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show when condition matches', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide when condition matches', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        // Post Meta Configuration\r\n        renderPostMetaConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <TextControl\r\n                        label={__('Meta Key', 'advanced-gutenberg')}\r\n                        value={rule.key || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'key', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Condition', 'advanced-gutenberg')}\r\n                        value={rule.condition || '='}\r\n                        options={this.getConditionOptions()}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'condition', value)}\r\n                    />\r\n                    <TextControl\r\n                        label={__('Value', 'advanced-gutenberg')}\r\n                        value={rule.value || ''}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'value', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show when condition matches', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide when condition matches', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderQueryStringConfig(rule, setIndex, ruleIndex) {\r\n            const queriesValue = Array.isArray(rule.queries)\r\n                ? rule.queries.join('\\n')\r\n                : (rule.queries || '');\r\n            return (\r\n                <Fragment>\r\n                    <TextareaControl\r\n                        label={__('Query Parameters', 'advanced-gutenberg')}\r\n                        help={__('Enter query parameter names, one per line', 'advanced-gutenberg')}\r\n                        value={queriesValue}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'queries', value);\r\n                        }}\r\n                        placeholder={__('utm_source\\nutm_medium\\nref', 'advanced-gutenberg')}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Logic', 'advanced-gutenberg')}\r\n                        value={rule.logic || 'all'}\r\n                        options={[\r\n                            { label: __('All parameters must be present', 'advanced-gutenberg'), value: 'all' },\r\n                            { label: __('Any parameter must be present', 'advanced-gutenberg'), value: 'any' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'logic', value)}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show when condition matches', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide when condition matches', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderCapabilitiesConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <FormTokenField\r\n                        multiple\r\n                        label={__('Select Capabilities', 'advanced-gutenberg')}\r\n                        placeholder={__('Search capabilities', 'advanced-gutenberg')}\r\n                        suggestions={getOptionSuggestions(this.getCapabilitiesOptions())}\r\n                        maxSuggestions={10}\r\n                        value={getOptionTitles(rule.capabilities || [], this.getCapabilitiesOptions())}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'capabilities', getOptionSlugs(value, this.getCapabilitiesOptions()));\r\n                        }}\r\n                        __experimentalExpandOnFocus\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show to users with selected capabilities', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide from users with selected capabilities', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderArchiveConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <FormTokenField\r\n                        multiple\r\n                        label={__('Select Archive Types', 'advanced-gutenberg')}\r\n                        placeholder={__('Search archive types', 'advanced-gutenberg')}\r\n                        suggestions={getOptionSuggestions(this.getArchiveOptions())}\r\n                        maxSuggestions={10}\r\n                        value={getOptionTitles(rule.archives || [], this.getArchiveOptions())}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'archives', getOptionSlugs(value, this.getArchiveOptions()));\r\n                        }}\r\n                        __experimentalExpandOnFocus\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show on selected archives', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide from selected archives', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        renderPageConfig(rule, setIndex, ruleIndex) {\r\n            return (\r\n                <Fragment>\r\n                    <FormTokenField\r\n                        multiple\r\n                        label={__('Select Pages', 'advanced-gutenberg')}\r\n                        placeholder={__('Search pages', 'advanced-gutenberg')}\r\n                        suggestions={getOptionSuggestions(this.getPageOptions())}\r\n                        maxSuggestions={10}\r\n                        value={getOptionTitles(rule.pages || [], this.getPageOptions())}\r\n                        onChange={(value) => {\r\n                            this.updateRuleData(setIndex, ruleIndex, 'pages', getOptionSlugs(value, this.getPageOptions()));\r\n                        }}\r\n                        __experimentalExpandOnFocus\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Approach', 'advanced-gutenberg')}\r\n                        value={rule.approach || 'include'}\r\n                        options={[\r\n                            { label: __('Show on selected pages', 'advanced-gutenberg'), value: 'include' },\r\n                            { label: __('Hide from selected pages', 'advanced-gutenberg'), value: 'exclude' }\r\n                        ]}\r\n                        onChange={(value) => this.updateRuleData(setIndex, ruleIndex, 'approach', value)}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        getUserRoles() {\r\n            return typeof advgb_block_controls_vars.user_roles !== 'undefined'\r\n                ? advgb_block_controls_vars.user_roles\r\n                : [];\r\n        }\r\n\r\n        getCapabilitiesOptions() {\r\n            const capabilities = typeof advgb_block_controls_vars.capabilities !== 'undefined'\r\n                ? advgb_block_controls_vars.capabilities\r\n                : [];\r\n\r\n            return capabilities.map(cap => ({\r\n                slug: cap,\r\n                title: cap.split('_').map(word =>\r\n                    word.charAt(0).toUpperCase() + word.slice(1)\r\n                ).join(' ')\r\n            }));\r\n        }\r\n\r\n        getArchiveOptions() {\r\n            return [\r\n                { slug: 'category', title: __('Category Archives', 'advanced-gutenberg') },\r\n                { slug: 'tag', title: __('Tag Archives', 'advanced-gutenberg') },\r\n                { slug: 'date', title: __('Date Archives', 'advanced-gutenberg') },\r\n                { slug: 'author', title: __('Author Archives', 'advanced-gutenberg') }\r\n            ];\r\n        }\r\n\r\n        getPageOptions() {\r\n            return typeof advgb_block_controls_vars.page !== 'undefined'\r\n                ? advgb_block_controls_vars.page\r\n                : [];\r\n        }\r\n\r\n        removeRuleFromSet(setIndex, ruleIndex) {\r\n            const { currentPreset } = this.state;\r\n            const newControlSets = [...currentPreset.controlSets];\r\n            newControlSets[setIndex].rules.splice(ruleIndex, 1);\r\n\r\n            this.setState({\r\n                currentPreset: {\r\n                    ...currentPreset,\r\n                    controlSets: newControlSets\r\n                }\r\n            });\r\n        }\r\n\r\n        renderContextualMessage(lastAction) {\r\n            let icon, title, description;\r\n\r\n            switch (lastAction) {\r\n                case 'cancelled':\r\n                    icon = '↩️';\r\n                    title = __('Edit Cancelled', 'advanced-gutenberg');\r\n                    description = __('Edit cancelled. Select another preset to edit or create a new one.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'saved':\r\n                    icon = '✅';\r\n                    title = __('Preset Saved!', 'advanced-gutenberg');\r\n                    description = __('Preset saved successfully! Choose another preset to edit or create a new one.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'deleted':\r\n                    icon = '🗑️';\r\n                    title = __('Preset Deleted', 'advanced-gutenberg');\r\n                    description = __('Preset deleted. Select another preset to edit or create a new one.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'error':\r\n                    icon = '⚠️';\r\n                    title = __('Action Completed', 'advanced-gutenberg');\r\n                    description = __('Operation completed. You can continue editing presets or create new ones.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'loaded':\r\n                    icon = '📋';\r\n                    title = __('Select a Preset to Edit', 'advanced-gutenberg');\r\n                    description = __('Choose a preset from the list to edit its rules, or create a new preset to get started.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'empty':\r\n                    icon = '📝';\r\n                    title = __('No Presets Yet', 'advanced-gutenberg');\r\n                    description = __('Create your first preset to start managing block visibility rules.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                case 'installed':\r\n                    icon = '✅';\r\n                    title = __('Samples Created!', 'advanced-gutenberg');\r\n                    description = __('Preset samples created successfully! Choose a preset to edit or create a new one.', 'advanced-gutenberg');\r\n                    break;\r\n\r\n                default:\r\n                    icon = '👋';\r\n                    title = __('Manage Your Presets', 'advanced-gutenberg');\r\n                    description = __('Select a preset to edit or create a new one to control block visibility.', 'advanced-gutenberg');\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <div className=\"advgb-guidance-icon\">{icon}</div>\r\n                    <h3>{title}</h3>\r\n                    <p>{description}</p>\r\n                    <div className=\"advgb-guidance-actions\">\r\n                        <Button\r\n                            isPrimary\r\n                            onClick={() => this.createNewPreset()}\r\n                            className=\"advgb-guidance-create-btn\"\r\n                        >\r\n                            {__('Create New Preset', 'advanced-gutenberg')}\r\n                        </Button>\r\n                        {lastAction === 'loaded' && (\r\n                            <Button\r\n                                isSecondary\r\n                                onClick={() => this.createSamplePresets()}\r\n                                className=\"advgb-guidance-samples-btn\"\r\n                            >\r\n                                {__('Add More Samples', 'advanced-gutenberg')}\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n\r\n        render() {\r\n            const { showModal, loading, error, currentPreset, editingPreset, deleting, presets, lastAction } = this.state;\r\n            const { isModal = false } = this.props;\r\n\r\n            const hasActiveForm = currentPreset || editingPreset;\r\n            const hasPresets = presets && presets.length > 0;\r\n\r\n            if (loading) {\r\n                return (\r\n                    <div className=\"advgb-preset-loading-container\">\r\n                        <div className=\"advgb-preset-loading-spinner\">\r\n                            <div className=\"advgb-spinner\">\r\n                                <div className=\"advgb-spinner-circle\"></div>\r\n                            </div>\r\n                            <p>{__('Loading presets...', 'advanced-gutenberg')}</p>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n\r\n            if (error) {\r\n                return <Notice status=\"error\">{error}</Notice>;\r\n            }\r\n\r\n            const content = (\r\n                <div className={`advgb-preset-manager ${deleting ? 'deleting' : ''}`}>\r\n                    {deleting && (\r\n                        <div className=\"advgb-preset-deleting-overlay\">\r\n                            <div className=\"advgb-preset-deleting-message\">\r\n                                <Spinner />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"advgb-preset-sidebar\">\r\n                        <div className=\"advgb-preset-sidebar-header\">\r\n                            {hasPresets && !hasActiveForm && (\r\n                                <Button\r\n                                    isPrimary\r\n                                    onClick={() => this.createNewPreset()}\r\n                                >\r\n                                    {__('Add New', 'advanced-gutenberg')}\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        {this.renderPresetList()}\r\n                    </div>\r\n\r\n                    <div className=\"advgb-preset-editor\">\r\n                        {(hasPresets || lastAction == 'creating') && hasActiveForm && this.renderPresetForm()}\r\n\r\n                        {!hasPresets && lastAction !== 'creating' && (\r\n                            <div className=\"advgb-welcome-message\">\r\n                                <div className=\"advgb-welcome-icon\">🚀</div>\r\n                                <h3>{__('Welcome to Block Control Presets', 'advanced-gutenberg')}</h3>\r\n                                <p>{__('Create your first preset or generate sample presets to get started with block visibility rules.', 'advanced-gutenberg')}</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {hasPresets && !hasActiveForm && (\r\n                            <div\r\n                                className=\"advgb-guidance-message\"\r\n                                data-action={lastAction}\r\n                            >\r\n                                {this.renderContextualMessage(lastAction)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            if (isModal) {\r\n                return (\r\n                    <Modal\r\n                        title={__('Block Control Presets', 'advanced-gutenberg')}\r\n                        onRequestClose={this.handleModalClose}\r\n                        isDismissible={true}\r\n                        shouldCloseOnClickOutside={false}\r\n                        shouldCloseOnEsc={true}\r\n                        isFullScreen={true}\r\n                        className=\"advgb-preset-modal\"\r\n                    >\r\n                        {content}\r\n                    </Modal>\r\n                );\r\n            }\r\n\r\n            return content;\r\n        }\r\n    }\r\n\r\n    window.AdvGBPresetManager = PresetManager;\r\n\r\n})(wp.i18n, wp.components, wp.element, wp.data);"],"names":["module","exports","to12Hour","hour","meridiem","meridian","to24Hour","time","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_wp$components","wp","components","ButtonGroup","Button","DateTimePicker","CheckboxControl","TextControl","Popover","Tooltip","SelectControl","_wp$element","Icon","element","Component","Fragment","useState","_wp$i18n","i18n","__","_x","applyFilters","hooks","AdvDateTimeControl","props","_useState2","_slicedToArray","popupState","setPopupState","togglePopup","buttonLabel","dateLabel","date","onChangeDate","onDateClear","onInvalidDate","placement","offset","React","createElement","className","isLink","icon","onClick","text","moment","format","onClose","bind","resize","currentDate","onChange","is12Hour","isInvalidDate","AdvDaysControl","allDays","slug","label","_props$days","days","onChangeDays","_useState4","Array","isArray","selectedDays","setSelectedDays","isDaySelected","some","el","map","day","checked","updatedDays","filter","findDay","find","concat","_toConsumableArray","uniqueDays","Set","onChangeDay","defaultProps","AdvTimeClass","_Component","_this","_classCallCheck","_callSuper","state","onChangeTime","currentTime","hours","minutes","onInit","_inherits","value","_this$state","this","setState","includes","split","parseInt","prevProps","prevState","_this$props","_this$state2","prevHours","prevMinutes","prevMeridian","savedTime","appendZero","hourConvert","isNaN","res","_this2","_this$state3","type","event","Math","max","min","Number","target","onKeyDown","placeholder","variant","disabled","onTimeClear","AdvTimeControl","AdvTimezoneControl","defaultTimezone","options","class","style","color","href","getOptionSuggestions","item","title","getOptionTitles","slugs","field_value","option_slug","find_option","getOptionSlugs","slugs_array","option_title","matching_slug","push","_regeneratorRuntime","e","t","r","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","_toPrimitive","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","_setPrototypeOf","wpI18n","wpComponents","wpElement","wpData","sprintf","Card","CardBody","CardHeader","TextareaControl","ToggleControl","FormTokenField","RangeControl","Modal","Notice","Spinner","PanelBody","BaseControl","RadioControl","ScheduleControl","useSelect","useDispatch","_ref","index","schedule","onRemove","getTimezoneLabel","getTimezoneSlug","canRemove","marginBottom","padding","border","borderRadius","display","justifyContent","isDestructive","dateFrom","newDate","dateTo","thisDate","Date","getTime","setHours","fromDate","recurring","help","timeFrom","newTime","timeTo","status","isDismissible","timezone","onChangeTimezone","PresetManager","presets","currentPreset","getDefaultPreset","editingPreset","showModal","modalMode","loading","saving","error","deleting","deletingPresetId","lastAction","handleModalClose","createNewPreset","editPreset","savePreset","deletePreset","addControlSet","removeControlSet","addRuleToSet","removeRuleFromSet","updateRuleData","initializePresets","setupDataSync","dataUnsubscribe","window","AdvGBPresetData","unsubscribe","subscribe","id","_createSamplePresets","_callee","response","_context","apiFetch","path","success","updatePresets","t0","console","_initializePresets","_callee2","_context2","waitForGlobalData","loadPresetsFromSources","checkData","advgb_block_controls_vars","setTimeout","_loadPresetsFromSources","_callee3","globalPresets","_globalPresets","_context3","getAllPresets","warn","controlSets","created","modified","_savePreset","_callee4","presetData","updatedPresets","_context4","data","loadPresets","message","_deletePreset","_callee5","presetId","_context5","_x2","preset","_objectSpread","setIndex","newControlSets","isCurrentlyExpanded","expanded","ruleIndex","rules","updatedControlSets","now","toString","_","ruleType","newRule","createRuleByType","unshift","baseRule","enabled","schedules","roles","approach","devices","min_width","max_width","browsers","systems","condition","queries","logic","capabilities","taxonomies","pages","dateString","toLocaleDateString","month","year","minute","hour12","ruleTypeObj","getAvailableRuleTypes","_this3","isPrimary","isSecondary","createSamplePresets","itemClasses","join","isSmall","stopPropagation","_this4","controlSet","renderControlSet","isBusy","_this5","isExpanded","isControlSetExpanded","toggleControlSet","rule","renderControlRule","_this6","isRuleExpanded","toggleRule","getRuleTypeLabel","renderRuleConfiguration","renderScheduleConfig","renderUserRoleConfig","renderDeviceTypeConfig","renderDeviceWidthConfig","renderBrowserDeviceConfig","renderOperatingSystemConfig","renderCookieConfig","renderUserMetaConfig","renderPostMetaConfig","renderQueryStringConfig","renderCapabilitiesConfig","renderArchiveConfig","renderPageConfig","splice","user_roles","cap","word","toUpperCase","page","advgbBlocks","_this7","scheduleIndex","updatedSchedules","idx","width","newSchedule","_this8","multiple","suggestions","getUserRoles","maxSuggestions","__experimentalExpandOnFocus","_this9","paddingLeft","deviceType","newDevices","_this10","_this11","getBrowserOptions","_this12","getOperatingSystemOptions","_this13","getConditionOptions","_this14","_this15","_this16","queriesValue","_this17","getCapabilitiesOptions","_this18","getArchiveOptions","archives","_this19","getPageOptions","description","_this20","_this21","_this$props$isModal","isModal","hasActiveForm","hasPresets","content","renderPresetList","renderPresetForm","renderContextualMessage","onRequestClose","shouldCloseOnClickOutside","shouldCloseOnEsc","isFullScreen","AdvGBPresetManager"],"sourceRoot":""}